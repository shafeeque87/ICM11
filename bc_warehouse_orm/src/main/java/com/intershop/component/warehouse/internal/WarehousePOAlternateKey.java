// =============================================================================
// File: WarehousePOAlternateKey.java
// Generated by JGen Code Generator from INTERSHOP Communications AG.
// Generator template: ORMAlternateKey.xpt(checksum: 293f94602d5b490cb50422801e7a60a5)
// =============================================================================
// The JGen Code Generator software is the property of INTERSHOP Communications AG. 
// Any rights to use are granted under the license agreement. 
// =============================================================================
package com.intershop.component.warehouse.internal;

import com.intershop.beehive.orm.capi.common.ORMObjectAlternateKey;

/**
 * This class represents the alternate key for objects of type WarehousePO. The key objects can be used for lookup
 * operations in the database.
 * 
 * @author training
 *
 * @generated
 */
public class WarehousePOAlternateKey extends ORMObjectAlternateKey
{
    /**
     * Serialization version to make compiler happy.
     *
     * @generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * An alternate key attribute.
     *
     * @generated
     */
    private String name;
    /**
     * An alternate key attribute.
     *
     * @generated
     */
    private String domainID;

    /**
     * Creates an empty alternate key. After creation of a new key object you must call the corresponding
     * set<i>Attribute</i> method(s) to set the value(s) of the alternate key.
     *
     * @generated
     */
    public WarehousePOAlternateKey()
    {
    }

    /**
     * Creates an alternate key with the specified value(s).
     *
     * @generated
     */
    public WarehousePOAlternateKey(String name, String domainID)
    {
        this.name = name;
        this.domainID = domainID;
    }

    /**
     * Returns the alternate key attribute.
     *
     * @return the value of the alternate key attribute
     * @generated
     */
    public String getName()
    {
        return name;
    }

    /**
     * Sets the alternate key attribute.
     *
     * @param value the attribute value
     * @generated
     */
    public void setName(String value)
    {
        this.name = value;
    }

    /**
     * Returns the alternate key attribute.
     *
     * @return the value of the alternate key attribute
     * @generated
     */
    public String getDomainID()
    {
        return domainID;
    }

    /**
     * Sets the alternate key attribute.
     *
     * @param value the attribute value
     * @generated
     */
    public void setDomainID(String value)
    {
        this.domainID = value;
    }

    /**
     * Checks if the key is a null key, e.g. all alternate key attributes are still set to null. Such keys are ambiguous
     * and can therefore not be used for lookup operations.
     *
     * @generated
     */
    @Override
    public boolean isNullKey()
    {
        return (name == null) && (domainID == null);
    }

    /**
     * Returns the hashcode of the alternate key object.
     *
     * @return the hashcode
     * @generated
     */
    @Override
    public int hashCode()
    {
        int hash = 0;

        if (name != null)
        {
            hash ^= name.hashCode();
        }
        if (domainID != null)
        {
            hash ^= domainID.hashCode();
        }

        return hash;
    }

    /**
     * Compares an object with this alternate key object.
     *
     * @return true, if the other object is an alternate key object of the same type and all key attributes are equal
     * @generated
     */
    @Override
    public boolean equals(Object anObject)
    {
        if (this == anObject)
        {
            return true;
        }

        if (isNullKey())
        {
            return false;
        }

        if (anObject != null)
        {
            if (anObject instanceof WarehousePOAlternateKey)
            {
                WarehousePOAlternateKey that = (WarehousePOAlternateKey)anObject;

                if ((name != null) && !name.equals(that.name))
                {
                    return false;
                }
                if ((name == null) && (that.name != null))
                {
                    return false;
                }
                if ((domainID != null) && !domainID.equals(that.domainID))
                {
                    return false;
                }
                if ((domainID == null) && (that.domainID != null))
                {
                    return false;
                }

                return true;
            }
        }

        return false;
    }

    /**
     * Returns a string representation of this key object.
     *
     * @return a string containing the key attributes
     * @generated
     */
    @Override
    public String toString()
    {
        StringBuilder buf = new StringBuilder(
                        "com.intershop.training.component.warehouse.internal.WarehousePOAlternateKey[");

        buf.append(name);
        buf.append(", ");
        buf.append(domainID);
        buf.append("]");

        return buf.toString();
    }
}
